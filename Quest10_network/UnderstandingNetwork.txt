우리가 이용하는 구글 웹페이지의 애플리케이션 계층은 클라이언트 구조로 되어있다.
우리가 구글 검색창에 쿼리를 날렸을 때 이는 송신 호스트로,
애플리케이션 계층부터 물리 계층까지 7개의 레이어를 거치며 데이터를 전송한다.

이 때 데이터는 패킷 단위로 쪼개지고 레이어를 거칠 때마다 각 프로토콜로 인해 헤더가 붙게 된다.
물리계층을 통해 구글 데이터센터 서버로 이 쿼리 데이터를 전송하게 되는데,
데이터센터까지 가는 가장 빠른 경로는 네트워크 계층에서 결정하게 된다.

수신호스트인 데이터센터로 패킷이 도착하게 되면, 
이번에는 물리 계층부터 애플리케이션 계층까지의 순서로 레이어들을 거치게 된다.
데이터센터의 애플리케이션 계층은 서버 구조로 되있으며, 
데이터센터에서 데이터를 처리하여 나온 검색 결과 값을 다시 클라이언트로 보내게 된다. 

이 때는 서버가 송신 호스트, 클라이언트가 수신 호스트가 되어 위의 과정을 하게 된다.
그래서 웹페이지 클라이언트가 서버로부터 데이터를 받으면, 검색 결과 창이 우리의 웹페이지에 뜨게 된다!

+
하지만 OSI 7 계층은 국제 표준화 기구인 ISO에서 표준안으로 만든 개념적인 모델이다.
대부분의 통신 프로토콜은 TCP/IP 형식을 체택하고 있다.
TCP/IP 프로토콜은 애플리케이션 계층, 트랜스포트 계층, 인터넷 계층, 네트워크 접근(access) 계층으로 총 4개의 레이어로 되어 있다.
TCP/IP의 애플리케이션 계층은 OSI의 애플리케이션+표현+세션 계층을 다 포함하고 있다고 보면 된다.
TCP/IP의 인터넷 계층은 OSI의 네트워크 계층에 해당하고, 네트워크 접근 계층은 OSI의 데이터링크와 물리 계층을 포함하고 있다.

+
웹브라우저 주소창에 www.google.com 을 입력하여 페이지를 요청한다.
그러면 컴퓨터는 www.google.com의 IP를 알아내기 위해 가장 가까운 곳에 위치한 DNS 서버에 접근하여 IP 주소를 묻는다.
만약 가장 가까운 DNS 서버가 IP주소를 알고 있다면 즉시 컴퓨터에게 알려주고, 그렇지 않으면 루트 도메인 네임서버에게 묻는다.
루트 네임서버는 최상위 도메인이 .com인 것을 보고 ".com" 네임서버의 IP 주소를 전달한다.
그러면 가장 가까운 DNS 서버는 ".com" 도메인을 관리하는 네임서버에게 물으면
네임서버는 google의 네임서버의 IP 주소를 알려준다.
그래서 가장 가까운 DNS 서버는 또 google의 네임서버에 문의하면, www의 네임서버를 알려준다.
마지막으로 www의 네임서버에 문의하면 최종적으로 www.google.com의 IP 주소를 얻을 수 있게 된다.
그러면 가장 가까운 DNS 서버는 이제 이 IP 주소를 클라이언트에게 알려주고,
클라이언트는 이 IP 주소를 브라우저에게 알려주면 브라우저는 이 IP에 해당하는 웹페이지의 내용을 표시하게 된다.
우리가 URL을 입력하고 엔터를 치자마자 웹페이지가 나오는 빠른 시간에 이렇게 열번에 가까운 과정이 일어난다는 게 신기하다.